(ns functional-programming.core-test
  (:require [clojure.test :refer :all]
            [functional-programming.core :refer :all])
  (:import (clojure.lang LazySeq)))

;(ACTUAL, EXPECTED)
;Task One Tests
(deftest test-convert-trinary-to-decimal
  ;Tests can be validated using the trinary to decimal calculator here https://www.epochconverter.com/numbers/bin-oct-dec-hex
  (testing "Trinary Conversions tests")
    (is (= 0 (convert-trinary-to-decimal "0")))
    (is (= 1 (convert-trinary-to-decimal "1")))
    (is (= 3 (convert-trinary-to-decimal "10")))
    (is (= 14 (convert-trinary-to-decimal "112")))
    (is (= 563 (convert-trinary-to-decimal "202212")))
    (is (= 32091 (convert-trinary-to-decimal "1122000120"))
    (is (= true (int? (convert-trinary-to-decimal "1122000120")))))

  (testing "Invalid Inputs")
  (is (= 0 (convert-trinary-to-decimal "   ")))
  (is (= 0 (convert-trinary-to-decimal "")))
  (is (= 0 (convert-trinary-to-decimal "333")))
  (is (= 0 (convert-trinary-to-decimal "4")))
  (is (= 0 (convert-trinary-to-decimal "5")))
  (is (= 0 (convert-trinary-to-decimal "6")))
  (is (= 0 (convert-trinary-to-decimal "7")))
  (is (= 0 (convert-trinary-to-decimal "8")))
  (is (= 0 (convert-trinary-to-decimal "9")))
  (is (= 0 (convert-trinary-to-decimal "11220080120")))
  (is (= 0 (convert-trinary-to-decimal "abc")))
  (is (= 0 (convert-trinary-to-decimal "v"))))

;Task Two Tests
(deftest test-translate-codon-to-protein
  (testing "Valid Conversions")
  (is (= "Methionine" (convert-codon-to-protein "AUG")))
  (is (= "Phenylalanine" (convert-codon-to-protein "UUU")))
  (is (= "Phenylalanine" (convert-codon-to-protein "UUC")))
  (is (= "Leucine" (convert-codon-to-protein "UUA")))
  (is (= "Leucine" (convert-codon-to-protein "UUG")))
  (is (= "Serine" (convert-codon-to-protein "UCU")))
  (is (= "Serine" (convert-codon-to-protein "UCC")))
  (is (= "Serine" (convert-codon-to-protein "UCA")))
  (is (= "Serine" (convert-codon-to-protein "UCG")))
  (is (= "Tyrosine" (convert-codon-to-protein "UAU")))
  (is (= "Tyrosine" (convert-codon-to-protein "UAC")))
  (is (= "Cysteine" (convert-codon-to-protein "UGU")))
  (is (= "Cysteine" (convert-codon-to-protein "UGC")))
  (is (= "Tryptophan" (convert-codon-to-protein "UGG")))
  (is (= "STOP" (convert-codon-to-protein "UAA")))
  (is (= "STOP" (convert-codon-to-protein "UAG")))
  (is (= "STOP" (convert-codon-to-protein "UGA")))
  (is true (instance? String  (convert-codon-to-protein "AUG")))
  (is (= nil (convert-codon-to-protein 1))))

(deftest test_convert-rna-sequence-to-amino-acids
  (testing "Simple Conversions")
  (is (= (convert-rna-sequence-to-amino-acids "AUG") '("Methionine")))
  (is (= (convert-rna-sequence-to-amino-acids "UUU") '("Phenylalanine")))
  (is (= (convert-rna-sequence-to-amino-acids "UUC") '("Phenylalanine")))
  (is (= (convert-rna-sequence-to-amino-acids "UUA") '("Leucine")))
  (is (= (convert-rna-sequence-to-amino-acids "UUG") '("Leucine")))
  (is (= (convert-rna-sequence-to-amino-acids "UCU") '("Serine")))
  (is (= (convert-rna-sequence-to-amino-acids "UCC") '("Serine")))
  (is (= (convert-rna-sequence-to-amino-acids "UCA") '("Serine")))
  (is (= (convert-rna-sequence-to-amino-acids "UCG") '("Serine")))
  (is (= (convert-rna-sequence-to-amino-acids "UAU") '("Tyrosine")))
  (is (= (convert-rna-sequence-to-amino-acids "UAC") '("Tyrosine")))
  (is (= (convert-rna-sequence-to-amino-acids "UGU") '("Cysteine")))
  (is (= (convert-rna-sequence-to-amino-acids "UGC") '("Cysteine")))
  (is (= (convert-rna-sequence-to-amino-acids "UGG") '("Tryptophan")))
  (is (= (convert-rna-sequence-to-amino-acids "UAA") '()))
  (is (= (convert-rna-sequence-to-amino-acids "UAG") '()))
  (is (= (convert-rna-sequence-to-amino-acids "UGA") '()))
  (testing "Complex Proteins")
  (is (= (convert-rna-sequence-to-amino-acids "AUGUUUUGG") '("Methionine" "Phenylalanine" "Tryptophan")))
  (is (= (convert-rna-sequence-to-amino-acids "UAGUGG") '()))
  (is (= (convert-rna-sequence-to-amino-acids "UGGUAG") '("Tryptophan")))
  (is (= (convert-rna-sequence-to-amino-acids "AUGUUUUAA") '("Methionine" "Phenylalanine")))
  (is (= (convert-rna-sequence-to-amino-acids "UGGUAGUGG") '("Tryptophan")))
  (testing "Will Return A Lazy Sequence")
  (is true (instance? LazySeq (convert-rna-sequence-to-amino-acids "AUG")))
  (is true (instance? LazySeq (convert-rna-sequence-to-amino-acids "UAA")))
  (is true (instance? LazySeq (convert-rna-sequence-to-amino-acids "AUGUUUUGG"))))



;do i want to test extra data types here?